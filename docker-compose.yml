version: '3.8'

networks:
  msapp-network:

services:
  msprodutosapp:
    container_name: msprodutosapp
    build:
      context: ./msproduto
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/produtodb
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
    networks:
      - msapp-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: produtodb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: secret
    ports:
      - "3307:3306"
    networks:
      - msapp-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5

  mspedidosapp:
    container_name: mspedidosapp
    build:
      context: ./mspedidos
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_USERNAME: admin
      SPRING_DATA_MONGODB_PASSWORD: admin
    networks:
      - msapp-network

  mongodb:
    image: 'mongodb/mongodb-community-server:latest'
    container_name: mspedidosdb
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: mspedidosdb
    volumes:
      - 'mspedidosdb-data:/data/db'
    networks:
      - msapp-network
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

volumes:
  msprodutosdb-data:
  mspedidosdb-data: